import React, { useEffect, useState } from 'react';
import './App.css';

// Imports the Amplify library from 'aws-amplify' package. This is used to configure your app to interact with AWS services.
import { Amplify } from 'aws-amplify';
import {
  getCurrentUser,
  signOut
} from 'aws-amplify/auth';

import { fetchAuthSession } from 'aws-amplify/auth';

// Imports the Authenticator and withAuthenticator components from '@aws-amplify/ui-react'.
// Authenticator is a React component that provides a ready-to-use sign-in and sign-up UI.
// withAuthenticator is a higher-order component that wraps your app component to enforce authentication.
import { Authenticator, withAuthenticator } from '@aws-amplify/ui-react';

// Imports the default styles for the Amplify UI components. This line ensures that the authenticator looks nice out of the box.
import '@aws-amplify/ui-react/styles.css';

// Imports the awsExports configuration file generated by the Amplify CLI. This file contains the AWS service configurations (like Cognito, AppSync, etc.) specific to your project.
import awsExports from './aws-exports';

import Navigation from './navigation/index';

// Configures the Amplify library with the settings from aws-exports.js, which includes all the AWS service configurations for this project.
Amplify.configure(awsExports);

function App() {
  const [userGroups, setUserGroups] = useState([]);
  const [username, setUsername] = useState('');

  useEffect(() => {
    const fetchUserGroups = async () => {
      try {
        const session = await fetchAuthSession();
        const accessTokenPayload = session.tokens?.accessToken?.payload;
        const groups = accessTokenPayload?.["cognito:groups"] || [];
        setUserGroups(groups);
  
        // If you still want the username
        const username = accessTokenPayload?.["username"] || '';
        setUsername(username);
  
        console.log('User groups:', groups);
      } catch (error) {
        console.error("Error fetching user groups:", error);
      }
    };
  
    fetchUserGroups();
  }, []);

  return (
    <div className="App">
      <Authenticator>
        {({ signOut }) => (
          <main>
            <header className='App-header'>
              {/* Quiz Component */}
              {/* <Quiz /> */}
              {/* <Navigation /> */}
              <Navigation userGroups={userGroups} />
              {/* Sign Out Button */}
              {/* <HomeScreen /> */}
              <button 
                onClick={signOut} 
                style={{ 
                  margin: '20px', 
                  fontSize: '0.8rem', 
                  padding: '5px 10px', 
                  marginTop: '20px'
                }}
              >
                Sign Out
              </button>
            </header>
          </main>
        )}
      </Authenticator>
    </div>
  );
}

export default withAuthenticator(App);